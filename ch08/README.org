#+title: 函数探幽
#+created: [2022-03-14 Mon 13:41]
#+author: Min-Ye Zhang

* 片段

引用变量. 左边的 ~&~ 不是地址运算符, 而是声明一个指向 ~type1~ 类型变量的引用.
#+begin_src cpp
type1 var1;
type1 & ref1 = var1; // must init
#+end_src

* 概念
- ~inline~ 内联函数: 类似函数, 但在编译时用函数代码替换函数调用. 通常在声明原型的同时定义.
- 引用: 已定义变量的别名.
- 左值: 可被引用的数据对象, 例如变量, 数组元素, 结构成员, 引用和解除引用的指针.
  非左值包括字面常量, 包含多项的表达式.
  ~const~ 变量是不可修改的左值.

* 新提到的标准库

* Notes
- 执行函数调用的过程: 到达函数调用指令时
  1. 存储该指令的内存地址
  2. 复制参数到堆栈
  3. 跳到函数的内存单元, 执行函数代码
  4. 跳回到保存的指令地址
- 内联声明最适用于经常被调用的, 执行函数代码本身时间短于处理调用时间的函数片段.
- 内联与宏的差别: 内联函数参数按值传递, 而宏只是作文本替换.
- 现代 C++ 中, 只允许在

* 练习
